using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using QuanlyCuocDT.Model;
using QuanlyCuocDT.Dao;

namespace QuanlyCuocDT
{
    public partial class QuanlyKhachhang : DevExpress.XtraEditors.XtraUserControl
    {
        QLCuocDTContext db = new QLCuocDTContext();
        public QuanlyKhachhang()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            QuanlyCuocDT.Model.QLCuocDTContext dbContext = new QuanlyCuocDT.Model.QLCuocDTContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.KhachHangs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.KhachHangs.Where(p => p.Flag == true).ToList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            txtMaKH.Text = gridView1.GetFocusedRowCellValue(colMaKH).ToString();
            txtTenKH.Text= gridView1.GetFocusedRowCellValue(coltenkh).ToString();
            txtCMND.Text = gridView1.GetFocusedRowCellValue(colcmnd).ToString();
            txtNghenghiep.Text = gridView1.GetFocusedRowCellValue(colnghenghiep).ToString();
            txtChucvu.Text = gridView1.GetFocusedRowCellValue(colchucvu).ToString();
            txtDiachi.Text = gridView1.GetFocusedRowCellValue(coldiachi).ToString();
        }

        private void btnLuu_Click(object sender, EventArgs e)
        {
            KhachHang kh = new KhachHang();
            kh.MaKH = txtMaKH.Text;
            kh.TenKH = txtTenKH.Text;
            kh.CMND = txtCMND.Text;
            kh.DiaChi = txtDiachi.Text;
            kh.ChucVu = txtChucvu.Text;
            kh.NgheNghiep = txtNghenghiep.Text;
            kh.Flag = true;
            Khachhangdao khd = new Khachhangdao();
            khd.suakh(txtMaKH.Text, txtTenKH.Text, txtCMND.Text, txtNghenghiep.Text, txtChucvu.Text, txtDiachi.Text);
            XtraMessageBox.Show("Lưu thành công");
        }

        private void btnThemNV_Click(object sender, EventArgs e)
        {
            ThemKH f = new ThemKH();
            f.ShowDialog();
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
            QuanlyCuocDT.Model.QLCuocDTContext dbContext = new QuanlyCuocDT.Model.QLCuocDTContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.KhachHangs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.KhachHangs.Where(p => p.Flag == true).ToList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }
        public void loadlai()
        {
            QuanlyCuocDT.Model.QLCuocDTContext dbContext = new QuanlyCuocDT.Model.QLCuocDTContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.KhachHangs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.KhachHangs.Where(p => p.Flag == true).ToList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }
        private void btnXoa_Click(object sender, EventArgs e)
        {
            DialogResult dialogResult = XtraMessageBox.Show("Xác nhận", "Bạn thực sự muốn xóa?", MessageBoxButtons.YesNo);
            if (dialogResult == DialogResult.Yes)
            {
                string dongdangchon = gridView1.GetFocusedRowCellValue(colMaKH).ToString();
                if (dongdangchon == null)
                {
                    XtraMessageBox.Show("Bạn chưa chọn dòng!!");
                }
                else
                {
                    var kh = db.KhachHangs.Find(dongdangchon);
                    kh.Flag = false;
                    db.SaveChanges();
                    XtraMessageBox.Show("Đã xóa thành công!!");
                    loadlai();
                }
            }
        }
    }
}
